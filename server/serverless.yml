service: menu-app
frameworkVersion: '3'

useDotenv: true

plugins:
  - serverless-offline

custom:
  serverless-offline:
    httpPort: 4000

provider:
  name: aws
  runtime: nodejs18.x
  stage: dev
  # stage: prod
  region: us-east-1
  iamRoleStatements:
    - Effect: Allow
      Action:
        - s3:*
      Resource: arn:aws:s3:::${self:service}-${self:provider.stage}-img-profile/*
    - Effect: Allow
      Action:
        - dynamodb:*
      Resource: arn:aws:dynamodb:${self:provider.region}:*:table/${self:service}-${self:provider.stage}-menu

functions:
  main:
    handler: dist/main.handler
    events:
      - http:
          method: ANY
          path: /
      - http:
          method: ANY
          path: '{proxy+}'

resources:
  Resources:
    ImgProfileBucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${self:service}-${self:provider.stage}-img-profile
        AccessControl: PublicRead
        CorsConfiguration:
          CorsRules:
            - AllowedOrigins:
                - '*'
              AllowedHeaders:
                - '*'
              AllowedMethods:
                - GET
                - PUT
                - POST
                - DELETE
                - HEAD
              MaxAge: 3000
    MenuTable:
      Type: AWS::DynamoDB::Table
      DeletionPolicy: Retain
      Properties:
        TableName: ${self:service}-${self:provider.stage}-menu
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
          - AttributeName: type
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        GlobalSecondaryIndexes:
          - IndexName: typeIndex
            KeySchema:
              - AttributeName: type
                KeyType: HASH
            Projection:
              ProjectionType: ALL
